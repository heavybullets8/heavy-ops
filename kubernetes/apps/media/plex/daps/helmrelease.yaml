---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app daps
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: plex
      namespace: media
    - name: kometa
      namespace: media
    - name: openebs
      namespace: openebs-system
    - name: volsync
      namespace: volsync-system

  values:
    controllers:
      daps:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/drazzilb08/daps
              tag: v2.0.0@sha256:6a0879aeab34d1b55b65e1cdc5a1b93534b764104449043d5c979b4e0decead5
            env:
              TZ: ${TIMEZONE}
            resources:
              requests:
                cpu: 10m
                memory: 150Mi
              limits:
                memory: 5Gi

    service:
      app:
        controller: *app
        ports:
          http:
            port: 8000

    ingress:
      app:
        className: external
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/api/verify"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/?rm=$request_method"
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config

      posters:
        type: persistentVolumeClaim
        existingClaim: kometa-assets
        globalMounts:
          - path: /posters

